== Developement Instructions (step-by-step to get a development environmnet setup)==

1. Execute contrib/nova.sh branch [nova branch] to get the latest OpenStack nova code base.
e.g. $ contrib/nova.sh branch (this will get the trunk version. Note that this might not be stable)
     $ contrib/nova.sh branch lp:nova/cactus (This will get the cactus release -- this should be stable)
     
2. Execute contrib/nova.sh install to install depenencies required by OpenStack
e.g. $ contrib/nova.sh install

3. Update the Dom0 on the host machine with the nova / gridcentric plugins
e.g. $ scp -r nova/plugins/xenserver/xenapi/etc root@<xenserver domain>:/
     $ scp -r ../plugins/xenserver/xenapi/* root@<xenserver domain>:/
     These last 2 are if you want to use the mock gridcentric functionality (instead of installing
     the vms support).
     $ ssh root@<xenserver domain> "ln -s /usr/sbin/suspend.vms.mock /usr/sbin/suspend.vms"
     $ ssh root@<xenserver domain> "ln -s /usr/sbin/launch.vms.mock /usr/sbin/suspend.vms"

4. Install the glance packages (TODO: This should be rolled into step2 and installed with everything else)
e.g. $ sudo apt-get install glance

5. Execute contrib/nova.sh run to execute all the nova processes (including the gridcentric extesions)
Note: this should be executed as root, and it will create a new screen session for each nova process.
e.g. $ sudo XEN_CONN_PASS=<xen api password> contrib/nova.sh run

6. Use glance to upload a virtual machine image file (TODO: This image file should probably be
downloaded as part of the install when the other images are downloaded).
e.g. $ cd contrib/images
     $ tar -xvzf chromeos.tgz
     $ glance add name="ChromeOS public" is_public=true disk_format=raw distro="ChromeOS" < chromeos.img 
     
7. Boot your first virtual machine
e.g. $ nova boot --flavor 1 --image 1 ChromeOS-HVM

8. Suspend the virtual machine
e.g. $ gc-nova suspend 1

9 Launch more virtual machines based off of the suspended snapshot
e.g. $ gc-nova launch 2
     $ gc-nova launch 2
     $ ... etc ...

== Installation Instructions ==

1. Ensure that OpenStack-compute is installed (http://www.openstack.org/projects/compute/). Note
that this is currently for Xen-only hypervisor installations. To setup OpenStack compute for xen
follow these instructions: http://wiki.openstack.org/XenServerDevelopment

2. Copy the extension definition (extension/gridcentric_extension.py) to the OpenStack extension
directory (default is /var/lib/nova/extensions and can be overriden using the osapi_extensions_path
flag).

3. Install the Xen API plugins on dom0 of the compute node 
(e.g. scp -r plugins/xenserver/xenapi root@<xenserver-domain>:/)

4. Install the nova-gridentric management component

==Project Contents==

bin
    nova-gridcentric
        Contains the nova-gridcentric script that is used to start the GridCentric-nova manager. 

extension
    Container the source for the OpenStack API extension. This should be copied to the OpenStack
    extension directory (defaults to /var/lib/nova/extensions or can be set using the 
    osapi_extensions_path flag in the nova.conf flag file).

gridcentric
    Contains the source for the gridcentric manager that does the actual work to enable the 
    GridCentric functionality

plugins
    Contains plugins for xenapi that need to be installed in dom0 of each compute host:
        scp -r plugins/xenserver/xenapi root@<xenserver-domain>:/
    
    
tools
    gc-nova
        A management tool that uses the python novaclient to provide a cli to the extended 
        functionality.
