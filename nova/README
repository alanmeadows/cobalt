== Overview ==

This project is a simple Openstack extensions that exposes Gridcentric's Virtual Machine Streaming 
(VMS) technology. It allows Openstack clouds to take advantage of VMS-enabled hypervisors (currently
supports Xen and KVM). See http://www.gridcentric.com for more information on VMS.


== Installation Instructions ==

There are two main components that need to be installed:
    1. API-Extension:       This is the actual API extension that exposes the new REST end points
    2. Gridcentric Service: A new Openstack service that performs the gridcentric specific 
                            operations.

This extension needs to be installed where ever the nova-api and nova-compute services are running.

==== From Source ===

1. python setup.py build

2. sudo python setup.py install

3. Copy the extension file (gridcentric/osapi/gridcentric_extension.py) to the nova osapi extension
directory (the --osapi_extensions_path nova configuration flag):
       e.g. cp gridcentric/osapi/gridcentric_extension.py /var/lib/nova/extensions/

5. (Optional) Copy the nova-gridcentric upstart script (etc/nova-gridcentric.conf) to /etc/init/

4. Restart the nova-api service

5. Start the nova-gridcentric service. Check the /var/log/nova/nova-gc.log file to ensure the
service is running.


== Usage ==

1. Boot your a new instance using the regular Openstack API
e.g. $ nova boot --flavor 1 --image 1 ChromeOS-HVM

2. Wait for the first machine to move from BUILD to ACTIVE. Once ACTIVE ssh into the instance
and install the vms-agent package. The agent package is used to ensure that the networking is 
reconfigured correctly when launching new instances.

3. Bless the instance. This will create a running snapshot of the instance that can later be
used to launch new instances. Launched instances will be started with the same loaded memory
as this blessed one.
e.g. $ gc-api bless <id of the instance from step 1>

4. List the nova instances and there should now be a new one in with a status of BLESSED. This
instance represents a blessed snapshot that can be launched.

5 Launch more instances based off of the blessed one
e.g. $ gc-api launch <blessed instance id>
     $ gc-api launch <blessed instance id>
     $ ... etc ...

6. Delete the launched instances.
e.g. $ nova delete <instance_id>

7. Discard the blessed instance. This will clean up all the VMS artifacts associated with the
snapshot and remove the blessed instance from the nova database.
e.g. $ gc-api discard <blessed instance id>

== Project Contents ==

bin
    nova-gc
        Contains the nova-gc script that is used to start the GridCentric manager. 

etc
    nova-gridcentric.con
        An upstart script for the nova-gridcentric service.

gridcentric
    Contains the source for the gridcentric manager that does the actual work
    to enable the GridCentric functionality.

tools
    gc-api
        A management tool that uses the python novaclient to provide a cli to
        the extended functionality.
