== Development Instructions (step-by-step to get a development environment setup) ==

1. Execute contrib/nova.sh branch [nova branch] to get the latest OpenStack nova code base.
e.g. $ contrib/nova.sh branch (this will get the trunk version. Note that this might not be stable)
     $ contrib/nova.sh branch lp:nova/cactus (This will get the cactus release -- this should be stable)

2. Execute contrib/nova.sh install to install depenencies required by OpenStack
e.g. $ contrib/nova.sh install

3. Update the Dom0 on the host machine with the nova plugins
e.g. $ scp -r nova/plugins/xenserver/xenapi/etc root@<xenserver domain>:/

4. Install the glance packages
e.g. $ sudo apt-get install glance

5. Install the vms packages

5. Execute contrib/nova.sh run to execute all the nova processes (including the gridcentric extension)
Note: this should be executed as root, and it will create a new screen session for each nova process.
e.g. $ sudo XEN_CONN_URL="<http://xen_host>" XEN_CONN_PASS=<xen api password> contrib/nova.sh run

6. Use glance to upload a virtual machine image file (TODO: This image file should probably be
downloaded as part of the install when the other images are downloaded. For the time being use
the CentOS image on filer (filer:/export/dscannell-test/hvm-centos-adin.img. I will mount 
filer:/export/dscannell-test at /tmp/dscannell-test. Note, images can get big, and but default
glance is using the root system. To change locations modify the contrib/glance.conf file.)
e.g. $ mkdir /tmp/dscannell
     $ mount filer:/export/dscannell-test /tmp/dscannell-test
     $ glance add name="CentOS HVM public" is_public=true disk_format=raw distro="CentOs" < /tmp/dscannell-test/hvm-centos-adin.img 
     
7. Boot your first virtual machine
e.g. $ nova boot --flavor 1 --image 1 ChromeOS-HVM

8. Wait for the first machine to move from BUILD to ACTIVE. Also note its best to wait a few seconds
before blessing the virtual machine.

9. Bless the virtual machine
e.g. $ gc-api bless 1

10 Launch more virtual machines based off of the suspended snapshot
e.g. $ gc-api launch 2
     $ gc-api launch 2
     $ ... etc ...

== Installation Instructions ==

1. Ensure that OpenStack-compute is installed (http://www.openstack.org/projects/compute/). Note
that this is currently for Xen-only hypervisor installations. To setup OpenStack compute for xen
follow these instructions: http://wiki.openstack.org/XenServerDevelopment

2. Install the nova-gridentric management component.

3. (Optional) If the extension is not loaded (i.e. 'gc' doesn't work),
   Be sure to add the extension to your nova.conf as:
    --osapi_extension=gridcentric.nova.osapi.gridcentric_extension
   Or, if that doesn't work, you can make sure the path correctly:
    --osapi_extensions_path=/var/lib/nova/extensions

4. Install the Xen API plugins on dom0 of the compute node and/or KVM packages.
(e.g. scp -r plugins/xenserver/xenapi root@<xenserver-domain>:/)

== Project Contents ==

bin
    nova-gc
        Contains the nova-gc script that is used to start the GridCentric manager. 

extension
    Container the source for the OpenStack API extension. This should be copied
    to the OpenStack extension directory (defaults to /var/lib/nova/extensions
    or can be set using the osapi_extensions_path flag in the nova.conf flag
    file).

gridcentric
    Contains the source for the gridcentric manager that does the actual work
    to enable the GridCentric functionality.

tools
    gc-api
        A management tool that uses the python novaclient to provide a cli to
        the extended functionality.
